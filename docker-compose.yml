services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: outdoor-spot-db
    environment:
      POSTGRES_DB: outdoor_spot
      POSTGRES_USER: outdoor_spot_user
      POSTGRES_PASSWORD: outdoor_spot_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - outdoor-spot



  # Backend (Node.js + Prisma)
  backend:
    image: node:20-alpine
    container_name: outdoor-spot-backend
    working_dir: /app
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://outdoor_spot_user:outdoor_spot_password@postgres:5432/outdoor_spot
      JWT_SECRET: dev_secret_change_me
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    depends_on:
      - postgres
    networks:
      - outdoor-spot
    command: sh -c "if [ -z \"$(ls -A node_modules 2>/dev/null)\" ]; then npm install; fi && npm run dev"




  # Frontend (Next.js)
  frontend:
    image: node:20-alpine
    container_name: outdoor-spot-frontend
    working_dir: /app
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://backend:3001
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
      - frontend_next:/app/.next
    depends_on:
      - backend
    networks:
      - outdoor-spot
    command: sh -c "if [ -z \"$(ls -A node_modules 2>/dev/null)\" ]; then npm install; fi && npm run dev"


volumes:
  postgres_data:
  backend_node_modules:
  frontend_node_modules:
  frontend_next:

networks:
  outdoor-spot:
    driver: bridge
